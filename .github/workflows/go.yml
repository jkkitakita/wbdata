name: Go
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"
  pull_request:
    paths-ignore:
      - "**/README.md"
env:
  GOLANGCI_LINT_VERSION: v1.37.1

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest]
        go-version: [1.15]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build -v .
      - name: install lint
        run: go get github.com/golangci/golangci-lint/cmd/golangci-lint@${GOLANGCI_LINT_VERSION}
      - name: lint
        run: golangci-lint run ./... -v
      - name: test
        run: go test -race -coverprofile coverage.txt -covermode atomic ./... -v -update true
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          file: ./coverage.txt
          fail_ci_if_error: true
      - name: start deployment
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "main", "environment": "production", "required_contexts": []}' \
            https://api.github.com/repos/${{ github.repository }}/deployments
